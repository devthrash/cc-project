version: "3.8"

services:
  pgsql:
    image: postgres:14.6
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgsql_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - net

  mongo:
    image: mongo:5.0
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
    command: mongod --bind_ip_all
    ports:
      - "27017:27017"
    networks:
      - net

  rabbitmq:
    image: rabbitmq:3.9.26-management
    volumes:
      - ./rabbitmq_definitions.json:/etc/rabbitmq/definitions.json:ro
      - rabbitmq_data:/var/lib/rabbitmq
#    environment:
#      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbitmq_management load_definitions "/etc/rabbitmq/definitions.json"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - net

  feed_worker:
    build:
      context: ./feed_worker
    environment:
      AMQP_USER: guest
      AMQP_PASS: guest
      AMQP_HOST: rabbitmq
      AMQP_PORT: 5672
      AMPQ_QUEUE: events
      METADATA_SERVICE_HOST: http://metadata_service:9000
    networks:
      - net
    restart: unless-stopped

  metadata_service:
    build:
      context: ./metadata_service
    environment:
      MONGO_URL: mongodb://${MONGO_INITDB_USERNAME}:${MONGO_INITDB_PASSWORD}@mongo:27017/${MONGO_INITDB_DATABASE}
    networks:
      - net

  api:
    build:
      context: ./composition_api
    environment:
      METADATA_SERVICE_HOST: http://metadata_service:9000
    ports:
      - "9000:9000"
    networks:
      - net


volumes:
  pgsql_data:

  mongo_data:

  rabbitmq_data:


networks:
  net:
    driver: bridge
