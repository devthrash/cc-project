version: "3.8"

services:
  pgsql:
    image: postgres:14.6
    environment:
      POSTGRES_USER: test_db_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test_db
    volumes:
      - pgsql_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - net

  mongo:
    image: mongo:5.0
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
    command: mongod --bind_ip_all
    ports:
      - "27017:27017"
    networks:
      - net

  rabbitmq:
    image: rabbitmq:3.9.26-management
    volumes:
      - ./rabbitmq_definitions.json:/etc/rabbitmq/definitions.json:ro
      - rabbitmq_data:/var/lib/rabbitmq
#    environment:
#      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbitmq_management load_definitions "/etc/rabbitmq/definitions.json"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - net

  event_worker:
    build:
      context: event_worker
    environment:
      AMQP_USER: guest
      AMQP_PASS: guest
      AMQP_HOST: rabbitmq
      AMQP_PORT: 5672
      AMPQ_QUEUE: events
      METADATA_SERVICE_HOST: http://metadata_service:9000
    networks:
      - net
    restart: unless-stopped

  metadata_service:
    build:
      context: ./metadata_service
    environment:
      MONGO_URL: mongodb://${MONGO_INITDB_USERNAME}:${MONGO_INITDB_PASSWORD}@mongo:27017/${MONGO_INITDB_DATABASE}
    networks:
      - net

  api:
    build:
      context: ./composition_api
    environment:
      METADATA_SERVICE_HOST: http://metadata_service:9000
      BLOGS_API_HOST: http://host.docker.internal:8080
    ports:
      - "9000:9000"
    networks:
      - net

  api_proxy:
    image: nginx:1.23.2
    volumes:
      - ./nginx.conf:/etc/nginx/templates/default.conf.template:ro
    environment:
      API_HOST: api:9000
    ports:
      - "9999:80"
    networks:
      - net

  frontend:
    build:
      context: ./frontend
    ports:
      - "80:80"


  post-service:
    build: .
    depends_on:
      - pgsql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://pgsql:5432/test_db
      - SPRING_DATASOURCE_USERNAME=test_db_user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
    ports:
      - "8080:8080"
    volumes:
      - app_data:/var/lib/app_data/data

volumes:
  pgsql_data:

  mongo_data:

  rabbitmq_data:

  app_data:

networks:
  net:
    driver: bridge
